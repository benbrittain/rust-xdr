// autogenerated by xdrust
#[allow(dead_code)]
use std::io;
use serde_xdr;
//use xdr_rpc::*;
//use tokio_code::io::EasyBuf;


#[derive(Serialize, Deserialize, PartialEq, Debug)]
pub struct ExampleRes {
  pub my_int: u32,
  pub my_bool: bool,
}
pub type ExampleUint = u32;

#[derive(Serialize, Deserialize, PartialEq, Debug)]
pub struct VecExampleRes {
  pub my_normal_int: ExampleUint,
  pub my_vector_of_ints: Vec<ExampleUint>,
}

#[derive(Serialize, Deserialize, PartialEq, Debug)]
pub enum ExampleStatus {
  ExStatusOk = 0,
  ExStatusErr = 1,
  ExStatusInt = 2,
  ExStatusBool = 3,
  ExStatusMax = 4,
}

#[derive(Serialize, Deserialize, PartialEq, Debug)]
#[serde(rename(deserialize = "__UNION_SYMBOL__"))]
pub enum RpcUnionExample {
  #[serde(rename(serialize = "0"))]
  ExStatusOk {
    my_struct: ExampleRes,
  },
  #[serde(rename(serialize = "1"))]
  ExStatusErr {
  },
  #[serde(rename(serialize = "2"))]
  ExStatusInt {
    my_union_int: u32,
  },
  #[serde(rename(serialize = "3"))]
  ExStatusBool {
    my_union_bool: bool,
  },
  // Default case for the XDR Union
  UnionDefault_ {
  },
}
